name: Terraform
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '[ci skip]') == false }}
    defaults:
      run:
        working-directory: ./terraform/
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
  # ansible:
  #   name: Ansible
  #   runs-on: ubuntu-latest
  #   needs: terraform
  #   env:
  #     PYTHON_VERSION: 3.9
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  #     - name: Terraform Init
  #       run: terraform init
  #       working-directory: ./terraform/
  #     - name: Terraform Refresh
  #       run: terraform apply -refresh-only
  #       working-directory: ./terraform/
  #     - name: Terraform output
  #       run: terraform-bin output -json > terraform.tfoutput
  #       working-directory: ./terraform/
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #     - name: Install requirements of pip
  #       run: |
  #         pip install -U pip
  #         pip install -r requirements.txt
  #     - name: Install SSH Key
  #       uses: shimataro/ssh-key-action@v2
  #       with:
  #         key: ${{ secrets.ID_RSA_ORACLE }} 
  #         known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
  #     - name: Dry Run ansible playbook
  #       run: ansible-playbook site.yml -CD
  #       if: github.event_name == 'pull_request'
  #     - name: Run ansible playbook
  #       run: ansible-playbook site.yml
  #       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      # - name: Debug
      #   if: ${{ always() }}
      #   uses: mxschmitt/action-tmate@v3